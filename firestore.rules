rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to read/write their own document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Allow users to read their own reports
    match /reports/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Allow users to read/write their own letters
    match /letters/{letterId} {
        allow read, write: if request.resource.data.userId == request.auth.uid;
    }
    
    // Allow public creation of affiliate accounts
    match /affiliates/{affiliateId} {
        allow create: if request.auth.uid != null;
        allow read: if request.auth.uid != null;
        // Allow an affiliate to update another affiliate's record for referrals
        allow update: if request.auth.uid != null && (
            (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['referrals', 'credits']))
        );
    }
    
    // Allow affiliates to manage their own clients
    match /affiliates/{affiliateId}/clients/{clientId} {
      allow read, write: if request.auth.uid == affiliateId;
    }

    // Allow backend to write transactions
    match /transactions/{transactionId} {
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Example for backend/admin role
        allow read: if request.auth.uid != null; // Allow affiliates to read their transactions
    }

    // Allow backend to write stats, and authenticated users to read
    match /affiliateStats/{affiliateId} {
       allow read: if request.auth.uid != null;
       allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
